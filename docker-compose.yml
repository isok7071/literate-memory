version: '3'

services:
  nginx:
    build:
      dockerfile: ./images/nginx/Dockerfile # путь до dockerFile из которого будет собран docker-образ
    ports:
      - "80:80"
    networks:
      - network
    depends_on:
      - php-fpm
    volumes:
       - ./app/backend:/var/www/backend/
       - ./app/frontend:/var/www/frontend/
  php-fpm:
    build:
      context: .
      dockerfile: ./images/php-fpm/Dockerfile
    networks:
      - network
    volumes:
      - ./app/backend:/var/www/backend/
  frontend:
    build:
      context: .
      dockerfile: ./images/frontend/Dockerfile
    networks:
      - network
    volumes:
      - ./app/frontend:/var/www/frontend/
    ports:
      - "3000:3000"
    tty: true
  db:
    image: postgres
    env_file:
      - /images/psql/.env
    ports:
      - 5434:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U api"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - network
  pgadmin:
    image: dpage/pgadmin4
    environment:
        PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
        PGADMIN_DEFAULT_PASSWORD: password
        PGADMIN_LISTEN_PORT: 80
    ports:
        - 15432:80
    volumes:
        - pgadmin:/var/lib/pgadmin
    depends_on:
        - db
    networks:
        - network


networks:
  # явно объявленные сети
  network:
    driver: bridge
volumes:
  pgadmin: